

// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ojleksibqzqzjsjlfmpu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9qbGVrc2licXpxempzamxmbXB1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEzMTQyOTUsImV4cCI6MjA1Njg5MDI5NX0.YEjRvFGoxVk0Eg0qSUTPQv2eAq5BQbNB588xp5254hM";

// For debugging only - log the connection details
console.log('Initializing Supabase client:');
console.log('URL:', SUPABASE_URL);
console.log('Key exists:', !!SUPABASE_PUBLISHABLE_KEY);

// Create the Supabase client with enhanced debugging
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    fetch: (url: RequestInfo | URL, init?: RequestInit) => {
      // Log fetch operations in development
      console.log('Supabase fetch operation:', url);
      return fetch(url, init);
    },
  },
});

// Function to test the Supabase connection
export const testConnection = async (): Promise<boolean> => {
  try {
    console.log('Testing Supabase connection with ping_db function...');
    const { data, error } = await supabase.rpc('ping_db');
    
    if (error) {
      console.error('Supabase ping_db test failed:', error);
      return false;
    }
    
    console.log('Supabase connection successful:', data);
    return true;
  } catch (err) {
    console.error('Exception in Supabase ping test:', err);
    return false;
  }
};

// Export a function to fetch projects that can be used directly
export const fetchProjects = async () => {
  console.log('Fetching projects from Supabase...');
  try {
    const { data, error, status } = await supabase
      .from('projects')
      .select('*')
      .order('created_at', { ascending: false });
      
    console.log('Projects fetch status:', status);
    
    if (error) {
      console.error('Error fetching projects:', error);
      throw error;
    }
    
    console.log('Projects fetched successfully, count:', data?.length || 0);
    return data || [];
  } catch (err) {
    console.error('Exception in fetchProjects:', err);
    throw err;
  }
};

// Run an initial connection test
testConnection().then(success => {
  if (success) {
    console.log('Initial Supabase connection test passed');
  } else {
    console.warn('Initial Supabase connection test failed');
  }
});
